// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VectoVia.Data;

#nullable disable

namespace vectovia.Migrations.KompaniaRentDb
{
    [DbContext(typeof(KompaniaRentDbContext))]
    [Migration("20240530151042_migrimiLorik")]
    partial class migrimiLorik
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("VectoVia.Models.Cars.Model.Car", b =>
                {
                    b.Property<int>("Tabelat")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Tabelat"));

                    b.Property<string>("CarUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CompanyID")
                        .HasColumnType("int");

                    b.Property<string>("Karburanti")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MarkaID")
                        .HasColumnType("int");

                    b.Property<string>("Modeli")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Transmisioni")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VitiProdhimit")
                        .HasColumnType("int");

                    b.HasKey("Tabelat");

                    b.HasIndex("CompanyID");

                    b.HasIndex("MarkaID");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("VectoVia.Models.KompaniaRents.Model.KompaniaRent", b =>
                {
                    b.Property<int>("CompanyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CompanyID"));

                    b.Property<string>("CompanyLogoUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Kompania")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Qyteti")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sigurimi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CompanyID");

                    b.ToTable("KompaniaRents");
                });

            modelBuilder.Entity("VectoVia_LabCourse.Models.Cars.Model.Marka", b =>
                {
                    b.Property<int>("MarkaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MarkaId"));

                    b.Property<string>("EmriMarkes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MarkaId");

                    b.ToTable("Marka");
                });

            modelBuilder.Entity("vectovia.Models.PickUpLocations.Model.PickUpLocation", b =>
                {
                    b.Property<int>("PickUpLocationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PickUpLocationID"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CompanyID")
                        .HasColumnType("int");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("city")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("locationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PickUpLocationID");

                    b.HasIndex("CompanyID");

                    b.ToTable("PickUpLocations");
                });

            modelBuilder.Entity("VectoVia.Models.Cars.Model.Car", b =>
                {
                    b.HasOne("VectoVia.Models.KompaniaRents.Model.KompaniaRent", "KompaniaRent")
                        .WithMany("Cars")
                        .HasForeignKey("CompanyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VectoVia_LabCourse.Models.Cars.Model.Marka", "Marka")
                        .WithMany("Cars")
                        .HasForeignKey("MarkaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KompaniaRent");

                    b.Navigation("Marka");
                });

            modelBuilder.Entity("vectovia.Models.PickUpLocations.Model.PickUpLocation", b =>
                {
                    b.HasOne("VectoVia.Models.KompaniaRents.Model.KompaniaRent", "RentCompany")
                        .WithMany("PickUpLocations")
                        .HasForeignKey("CompanyID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("RentCompany");
                });

            modelBuilder.Entity("VectoVia.Models.KompaniaRents.Model.KompaniaRent", b =>
                {
                    b.Navigation("Cars");

                    b.Navigation("PickUpLocations");
                });

            modelBuilder.Entity("VectoVia_LabCourse.Models.Cars.Model.Marka", b =>
                {
                    b.Navigation("Cars");
                });
#pragma warning restore 612, 618
        }
    }
}
